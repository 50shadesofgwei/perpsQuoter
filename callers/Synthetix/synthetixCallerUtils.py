from utils.logger import logger
from utils.globalUtils import string_to_bytes32
from web3 import *

def decode_bytes(byte_value: bytes) -> str:
    return byte_value.decode('utf-8').rstrip('\x00')

def scale_value(value: int, decimals: int) -> float:
    return value / (10 ** decimals)

def process_market_data(raw_data):
    try:
        processed_data = []
        for item in raw_data:

            market_address = item[0]  
            token_symbol = decode_bytes(item[1])  
            market_symbol = str(string_to_bytes32(decode_bytes(item[2]))) 
            leverage = scale_value(item[3], 18)
            open_interest = scale_value(item[4], 18)

            processed_data.append({
                'market_address': market_address,
                'token_symbol': token_symbol,
                'market_symbol': market_symbol,
                'leverage': leverage,
                'open_interest': open_interest,
            })

        return processed_data
    
    except Exception as e:
        logger.error(f"SynthetixCallerUtils - An error occurred while formatting market data from the contract: {e}", exc_info=True)
        return None

V2_MARKET_KEYS = {
    "BNB": "0x73424e4250455250000000000000000000000000000000000000000000000000",
    "AXS": "0x7341585350455250000000000000000000000000000000000000000000000000",
    "XLM": "0x73584c4d50455250000000000000000000000000000000000000000000000000",
    "GRT": "0x7347525450455250000000000000000000000000000000000000000000000000",
    "MEME": "0x734d454d45504552500000000000000000000000000000000000000000000000",
    "IMX": "0x73494d5850455250000000000000000000000000000000000000000000000000",
    "SEI": "0x7353454950455250000000000000000000000000000000000000000000000000",
    "PEPE": "0x7350455045504552500000000000000000000000000000000000000000000000",
    "SUI": "0x7353554950455250000000000000000000000000000000000000000000000000",
    "RUNE": "0x7352554e45504552500000000000000000000000000000000000000000000000",
    "DOT": "0x73444f5450455250000000000000000000000000000000000000000000000000",
    "BTC": "0x7342544350455250000000000000000000000000000000000000000000000000",
    "OP": "0x734f505045525000000000000000000000000000000000000000000000000000",
    "LTC": "0x734c544350455250000000000000000000000000000000000000000000000000",
    "ADA": "0x7341444150455250000000000000000000000000000000000000000000000000",
    "ETH": "0x7345544850455250000000000000000000000000000000000000000000000000",
    "FIL": "0x7346494c50455250000000000000000000000000000000000000000000000000",
    "DYDX": "0x7344594458504552500000000000000000000000000000000000000000000000",
    "AVAX": "0x7341564158504552500000000000000000000000000000000000000000000000",
    "UNI": "0x73554e4950455250000000000000000000000000000000000000000000000000",
    "YFI": "0x7359464950455250000000000000000000000000000000000000000000000000",
    "MKR": "0x734d4b5250455250000000000000000000000000000000000000000000000000",
    "LINK": "0x734c494e4b504552500000000000000000000000000000000000000000000000"
}

def get_market_key_for_symbol(symbol: str):
    return V2_MARKET_KEYS.get(symbol)

